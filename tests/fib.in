tests:
 - recursion without define
 - if/else
 - plus
 - minus
 - multiplication

(
    (
        lambda
        (()())
        params
        (
            fib
            (() ((())))
        ) 
        call fib[6]
        (
            fib
            (() ((())))

            15
            (
                *
                (() ()(()))

                5
                ((()) ()()()()())
                3
                ((()) ()()())
            )

            fib
            (() ((())))
        )       
    )
    fib function
    (
        lambda
        (()())

        params
        (
            n
            (() ()())

            fib
            (() ()()(()))
        )

        if n <= 1 return n else fib[n - 1] + fib[n - 2]
        (
            if
            (() ()()())
            (
                <=
                (() ()(())())
                n
                (() ()())
                1
                ((()) ())
            )

            n
            (() ()())

            fib[n-1] + fib[n-2]
            (
                plus
                (() (()))

                fib[n - 1]
                (
                    fib
                    (() ()()(()))

                    n - 1
                    (
                        minus
                        (() (()()))
                        n
                        (() ()())
                        1
                        ((()) ())   
                    )   
                )

                fib[n - 2]
                (
                    fib
                    (() ()()(()))

                    n - 2
                    (
                        minus
                        (() (()()))
                        n
                        (() ()())
                        2
                        ((()) ()()) 
                    )   
                )
            )   
        )           
    )
)